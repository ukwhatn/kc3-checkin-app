<% content_for(:title, "出席登録") %>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-6 mt-3 mx-auto text-center">
      <%= link_to "前のページに戻る", admin_event_timetable_path(@event, @timetable) %>
    </div>
  </div>

  <div class="row">
    <div class="col-md-6 mx-auto text-center">
      <div class="mt-3 mb-1 fw-bold" style="font-size: 90%">
        登録対象
      </div>
      <div>
        <%= @content.name %>
      </div>
      <div class="mt-3 mb-1 fw-bold" style="font-size: 90%">
        開催日時
      </div>
      <div>
        <%= @content.timetable.name %>
      </div>
      <div style="font-size: 90%">
        (<%= @content.timetable.start_at.strftime("%Y/%m/%d %H:%M") %>
        ~ <%= @content.timetable.end_at.strftime("%Y/%m/%d %H:%M") %>)
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-6 mx-auto text-center">
      <div id="msg"></div>
      <canvas id="reader"></canvas>
    </div>
  </div>

  <%= form_with model: @new_attendance, url: admin_attendances_path do |f| %>
    <%= f.hidden_field :qr_token, id: "tokenField" %>
    <%= f.hidden_field :content_id, value: @content.id %>
    <%= f.submit "出席を登録", class: "btn btn-primary d-block mx-auto" %>
  <% end %>


</div>

<div class="row">
   <div class="col-md-6 mx-auto text-start">
      <div class="mt-3 mb-1 fw-bold" style="font-size: 90%">
        現在の参加者: <%= @attendances.count %> 人
      </div>
      <ul>
        <% @attendances.each do |attendance| %>
          <li>
            <%= attendance.user.full_name %>
            <ul>
              <li>
                所属: <%= attendance.user.univ.name %> / <%= attendance.user.group.name %>
              </li>
              <li>
                出席日時: <%= attendance.created_at.strftime("%Y/%m/%d %H:%M") %>
              </li>
            </ul>
          </li>
        <% end %>
      </ul>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/jsqr@1.4.0/dist/jsQR.min.js"></script>
<script>
    window.addEventListener("turbo:load", function () {

        let video = document.createElement("video");
        let canvas = document.getElementById("reader");
        let ctx = canvas.getContext("2d");
        let msg = document.getElementById("msg");

        const userMedia = {video: {facingMode: "environment"}};
        navigator.mediaDevices.getUserMedia(userMedia).then((stream) => {
            video.srcObject = stream;
            video.setAttribute("playsinline", true);
            video.play();
            startTick();
        });

        function startTick() {
            msg.innerText = "Loading video...";
            if (video.readyState === video.HAVE_ENOUGH_DATA) {
                canvas.height = video.videoHeight;
                canvas.width = video.videoWidth;
                ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
                let img = ctx.getImageData(0, 0, canvas.width, canvas.height);
                let code = jsQR(img.data, img.width, img.height, {inversionAttempts: "dontInvert"});
                if (code) {
                    msg.innerText = "読み取りました";
                    canvas.style.display = "none";
                    document.getElementById("tokenField").value = code.data;
                    return
                } else {
                    msg.innerText = "Detecting QR-Code...";
                }
            }
            setTimeout(startTick, 250);
        }

        function drawRect(location) {
            drawLine(location.topLeftCorner, location.topRightCorner);
            drawLine(location.topRightCorner, location.bottomRightCorner);
            drawLine(location.bottomRightCorner, location.bottomLeftCorner);
            drawLine(location.bottomLeftCorner, location.topLeftCorner);
        }

        function drawLine(begin, end) {
            ctx.lineWidth = 4;
            ctx.strokeStyle = "#FF3B58";
            ctx.beginPath();
            ctx.moveTo(begin.x, begin.y);
            ctx.lineTo(end.x, end.y);
            ctx.stroke();
        }
    })
</script>